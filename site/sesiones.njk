---
layout: layouts/base.njk
lang: es
title: Sesiones
description: |
  En esta página podrás ver las sesiones propuestas para la Tarugoff, **votar a las que te gustaría asistir** e incluso ¡animarte a enviar la tuya propia!.

  Tienes más info en [la home del evento](/tarugoff)

menu:
  - text: ← Volver
    url: '/'
  - text: Tarugoff
    url: '/tarugoff'

ctas:
  - text: Enviar sesión
    url: 'https://forms.gle/i2RBFiR6mQApMA7J9'
    class: button
    target: '_blank'

tags:
  - label: Management
    name: management
  - label: Desarrollo
    name: desarrollo
  - label: Datos
    name: datos
  - label: Remoto
    name: remoto
  - label: Juegos
    name: juegos
  - label: Producto
    name: producto
  - label: Marketing
    name: marketing
sessions:
  - title: 'Desarrollo Low-code'
    hash: '1'
    tags:
      - desarrollo
    stars: 1
    code: zHeBu9RfxW8
  - title: '¿Cómo motivas a un equipo en tiempos de crisis?'
    hash: '2'
    tags:
      - management
    stars: 1
    code: UZ27mNXaYVw
  - title: 'Data-mierding'
    hash: '3'
    tags:
      - datos
    stars: 1
    code: 8gY0tDeZEqY
  - title: '¿Cómo llevar las charlas de pasillo al remoto?'
    hash: '4' 
    tags:
      - management
      - remoto
    stars: 1
    code: N7QWa7Xu020
  - title: '¿Cómo se diseña un juego de mesa?'
    hash: '5'
    tags:
      - juegos
      - producto
    stars: 1
    code: VmBIn2SJaQI
  - title: 'Métricas de marketing'
    hash: '6'
    tags:
      - marketing
    stars: 1
    code: wZJ-1pQgmAo
  - title: 'Bootstraping'
    hash: '7'
    tags:
      - producto
    stars: 1
    code: zuXaP4fVNSo
  - title: 'Seguir programando después de los 40'
    hash: '8'
    tags:
      - desarrollo
    stars: 1
    code: fjD6kbLuK48
  - title: 'La curiosidad no tuvo que matar al Gato'
    hash: '9'
    tags:
      - management
    stars: 1
    code: EZwnbc1mif8

---
{% import "components.njk" as comp %}

<link href="{{ '/css/off.css' | url }}" rel="stylesheet">

{% include "templates/navbar.njk" %}

<script type="module" src="{{ '/js/filter.js' | url }}"></script>

<header class="intro ly-section">
  <h1 class="intro-title">{{ title }}</h1>
  <div class="intro-text">
      {{ description | md | safe }}
  </div>
</header>

<form id="filter" class="filter">
  <div class="filter-title">
    <label for="search-title" class="filter-label">Filtrar</label>
    <input type="search" name="title" id="search-title" placeholder="Escribe el título del vídeo">
  </div>

  <div class="filter-tags">
  {% for tag in tags %}
    <label>
      <input type="checkbox" name="{{ tag.name }}" value="1">
      <span>{{ tag.label }}</span>
    </label>
  {% endfor %}
  </div>

  <div class="filter-submit">
    <button class="button">Buscar</button>
  </div>
</form>

<div id="sessions" class="sessions">
  {% for session in sessions %}
  <article class="session" data-filter="{{ session | dump }}">
    <header class="session-header">
      <h2 class="session-title">#Charlaca{{ session.hash }}: {{ session.title }}</h2>

      <ul class="session-tags">
        {% for tag in session.tags %}
        <li>{{ tag }}</li>
        {% endfor %}
      </ul>
      <strong id="charlaca-{{session.hash}}-votes" class="session-stars">{{ session.stars }}★</strong>
    </header>

    <figure class="session-video">
      <iframe width="400" height="300" src="https://www.youtube.com/embed/{{ session.code }}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </figure>

    <footer class="session-footer">
      <a href="https://twitter.com/intent/tweet?text=Asistir%C3%A9+a+la+%23tarugoff%2C+el+open+space+de+la+%40tarugoconf%2C+y+me+gustar%C3%ADa+ver+la+%23Charlaca{{ session.hash }}+https%3A%2F%2Fyoutu.be%2F{{ session.code }}" class="button">
        Vota
      </a>
    </footer>
  </article>
  {% endfor %}
</div>

<script>
  let xhr = new XMLHttpRequest();

  xhr.open('GET', 'https://tarugoff.herokuapp.com/sessions');

  xhr.send();

  xhr.onload = function() {
    if (xhr.status != 200) {
      console.error(`Error ${xhr.status}: ${xhr.statusText}`);
    } else { 
      const sessions = JSON.parse(xhr.response);
      sessions.forEach(session => {
        const element = document.getElementById(`charlaca-${session.id}-votes`);
        if (element) {
          element.textContent = `${session.votes}★`;
        }
      });
    }
  };

  xhr.onerror = function() {
    console.error("Error getting the votes of the sessions");
  };
</script>
